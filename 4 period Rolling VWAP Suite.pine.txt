//@version=6
indicator(" 4 period Rolling VWAP Suite", overlay=true, precision=2, max_lines_count=500)

// —————— User Inputs ——————
show5  = input.bool(true,  "Show 5D",  group="VWAP Periods")
show10 = input.bool(true,  "Show 10D", group="VWAP Periods")
show15 = input.bool(true,  "Show 15D", group="VWAP Periods")
show20 = input.bool(true,  "Show 20D", group="VWAP Periods")
show50 = input.bool(false, "Show 50D", group="VWAP Periods")

// —————— Color Presets ——————
color5  = color.new(#FFA500, 0)  // Orange
color10 = color.new(#FF6B6B, 0)  // Soft red
color15 = color.new(#FFFFFF, 0)  // White
color20 = color.new(#4CC9F0, 0)  // Electric blue
color50 = color.new(#F9C74F, 0)  // Golden yellow

// —————— Core Calculation Engine ——————
var int MAX_DAYS = 50
var array<float> priceVolArray = array.new<float>(MAX_DAYS, 0.0)
var array<float> volArray = array.new<float>(MAX_DAYS, 0.0)
var int dayPointer = 0

isNewDay = ta.change(time("D")) 
if isNewDay != 0
    dayPointer := (dayPointer + 1) % MAX_DAYS
    array.set(priceVolArray, dayPointer, 0.0)
    array.set(volArray, dayPointer, 0.0)

// Update current day's data
currentPV = hlc3 * volume
currentVol = volume
array.set(priceVolArray, dayPointer, array.get(priceVolArray, dayPointer) + currentPV)
array.set(volArray, dayPointer, array.get(volArray, dayPointer) + currentVol)

// —————— Dynamic Calculation ——————
getRollingVWAP(int days) =>
    sumPV = 0.0
    sumVol = 0.0
    for i = 0 to days - 1
        idx = (dayPointer - i + MAX_DAYS) % MAX_DAYS
        sumPV += array.get(priceVolArray, idx)
        sumVol += array.get(volArray, idx)
    sumPV / sumVol

// —————— Plotting ——————
plot(show5  ? getRollingVWAP(5)  : na, "5D",  color5,  2)
plot(show10 ? getRollingVWAP(10) : na, "10D", color10, 2)
plot(show15 ? getRollingVWAP(15) : na, "15D", color15, 2)
plot(show20 ? getRollingVWAP(20) : na, "20D", color20, 2)
plot(show50 ? getRollingVWAP(50) : na, "50D", color50, 2)

// ----------------------
// End of script
// ----------------------